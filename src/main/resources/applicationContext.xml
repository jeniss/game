<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- 加载数据源配置文件 -->
    <context:property-placeholder location="classpath:mybatis/jdbc.properties" ignore-unresolvable="true"/>
    <!-- 第二种方式-->
    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
    <!--<property name="locations" value="classpath:mybatis/jdbc.properties"/>-->
    <!--</bean>-->

    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
    <!--<property name="driverClassName" value="${jdbc.driverClassName}"/>-->
    <!--<property name="url" value="${jdbc.url}"/>-->
    <!--<property name="username" value="${jdbc.username}"/>-->
    <!--<property name="password" value="${jdbc.password}"/>-->
    <!--</bean>-->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="${datasource.jndi}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- configLocation：the location of mybatis-config file -->
        <!--<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>-->
        <property name="mapperLocations" value="classpath:mybatis/mappers/*.xml"/>
        <property name="typeAliasesPackage" value="com.game.model"/>
    </bean>
    <!-- 自动生成MapperFactoryBean,使用SqlSessionDaoSupport或者SqlSessionTemplate编写数据访问对象（DAO）的代码 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.game.mapper"/>
    </bean>

    <!-- freeMarker start -->
    <bean id="freemarkerConfiguration" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPath" value="classpath:templates"/>
        <property name="preferFileSystemAccess" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">18000</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
                <prop key="output_encoding">UTF-8</prop>
            </props>
        </property>
    </bean>
    <!-- freeMarker end -->

    <!-- redis start -->
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.ip}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.pwd}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>
    <bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer" ref="stringRedisSerializer"/>
        <property name="hashKeySerializer" ref="stringRedisSerializer"/>
        <property name="valueSerializer" ref="stringRedisSerializer"/>
        <property name="hashValueSerializer" ref="stringRedisSerializer"/>
    </bean>
    <!-- redis start -->

    <!-- activemq start -->
    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://127.0.0.1:61616?wireFormat.maxInactivityDuration=0"></property>
        <property name="trustedPackages">
            <list>
                <value>com.game</value>
                <value>java.lang</value>
                <value>java.util</value>
            </list>
        </property>
    </bean>

    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="connectionFactory" ref="targetConnectionFactory"/>
        <property name="maxConnections" value="1"/>
    </bean>

    <bean id="connection" class="org.springframework.jms.connection.SingleConnectionFactory">
        <property name="targetConnectionFactory" ref="pooledConnectionFactory"/>
    </bean>

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="connection"/>
    </bean>

    <bean id="objectMessageConvert" class="com.game.jms.convert.ObjectMessageConvert"/>

    <!-- mail Queue -->
    <bean id="mailDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="mailQueue"/>
    </bean>
    <bean id="mailListener" class="com.game.jms.listener.MailListener"/>
    <bean id="mailListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connection"/>
        <property name="destination" ref="mailDestination"/>
        <property name="messageListener" ref="mailListener"/>
    </bean>
    <!--  cron exception Queue -->
    <bean id="cronExceptionDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="cronExceptionQueue"/>
    </bean>
    <bean id="cronExceptionListener" class="com.game.jms.listener.CronExceptionListener"/>
    <bean id="cronExceptionContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connection"/>
        <property name="destination" ref="cronExceptionDestination"/>
        <property name="messageListener" ref="cronExceptionListener"/>
    </bean>
    <!-- activemq end -->
</beans>

